# Tip: you can reload (when running): $ tmux source .tmux.conf

#if-shell 'test $(tput colors) -ge 256' 'set-option -g default-terminal "screen-256color"'

if-shell 'test "$(uname -s)" = Darwin' 'source-file $HOME/.tmux-osx.conf'
if-shell 'test "$(uname -s)" = Linux' 'source-file $HOME/.tmux-linux.conf'
if-shell 'test -n "$tmux_shell"' 'set-option -g default-command $tmux_shell' 'set-option -g default-shell $tmux_shell'

set-window-option -g mode-keys vi

# Some of these options were inspired by: http://zanshin.net/2013/09/05/my-tmux-configuration/ 
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h
bind - split-window -v

# Make the current window the first window
bind T swap-window -t 1

# v/y for 'visual' -> 'copy' (rather than space and enter)
# Note, to engage copy mode <C-b,[>, to paste <C-b,]>
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind -t vi-copy C-V rectangle-toggle 
# Can't quite get to work: http://superuser.com/questions/728284/tmux-select-entire-lines
#bind-key V send-keys "0v\$"
# Remember it's not "C-b, p" it's "C-b, C-p"
bind C-p run "tmux set-buffer \"\$(xclip -o)\"; tmux paste-buffer"
bind C-y run "tmux save-buffer - | xclip -i"

# useful one liner for colours: $ for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done
# pane-active-border-bg colour0
# pane-border-bg colour17

set -g status-bg colour234
set -g status-fg colour230
set -g status-left-bg colour237
set -g status-left-length 50
set -g status-left '#[bg=colour123]#[fg=colour19]#(whoami)@#h#[bg=default] - #[fg=colour213]#S'
set -g status-right-length 90
set -g status-right "#(echo '|') #[fg=colour203]#(now-task.sh 2>&1 || echo '{{no workbench.toneq}}' | xargs -I_task_ ellipsisify '_task_' 60 middle ' â€¦ ') #[fg=default]| #(now -I | sed -e 's/T/ /' -e 's/:[0-9][0-9]$//') #(batt -t || echo 'no batt')"

display "why hello there"
